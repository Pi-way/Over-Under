#include "vex.h"
#include <functional>

void pre_auton(void) {

	//#######################################################################################
	//#######################################################################################
	//#######################################################################################
	//#######################################################################################
	//#######################################################################################
	//#######################################################################################
	//#######################################################################################
	
	ms.Assign("Skills", "Left", "Winpoint", new auton{
		[](){
		}, "STARTING OVER YAY"
	});

	//#######################################################################################
	//#######################################################################################
	//#######################################################################################
	//#######################################################################################
	//#######################################################################################
	//#######################################################################################
	//#######################################################################################

	ms.Assign("Match", "Right", "Complex", new auton {
		[](){
			
			robot.Inertial.setHeading(253.5, deg);
			robot.RightWing.set(true);
			robot.Intake.setVelocity(60, pct);

			DriveWithAnglesAndSpeed({
				{54, {248, 100}}
			}, 100, false, false, 2);

			wait(0.5, sec);
			robot.RightWing.set(false);

			DriveWithAnglesAndSpeed({
				{-45, {248, 100}},
				{-8, {-45, 20}},
			}, 100, true, false, 2.25);

			robot.Intake.setVelocity(-100, pct);

			wait(0.5, sec);

			TurnAt(165, 100, true, false, 0.8, 0);
			DriveWithAnglesAndSpeed({{12, {165, 100}},{22, {180, 100}}}, 100, false, false, 1.5);

			wait(0.5, sec);
			robot.Intake.setVelocity(60, pct);
		},
		"6-ball rush."
	});

	
	ms.SetTestAutonomous("Match", "Right", "Complex");

	Calibrate(true);

	while(ms.should_update && (Competition.isFieldControl() || Competition.isCompetitionSwitch())){
		ms.Update();
		wait(20, msec);
	}
}